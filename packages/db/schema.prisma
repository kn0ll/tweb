datasource db {
  provider = "postgresql"
  url      = env("DBURL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["tracing"]
  output = "./src/client"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(254)
  username  String   @unique @db.VarChar(32)
  password  String   @db.VarChar(60)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sessions        Session[]
  createdProjects Project[]
  projectRoles    UserProjectRole[]
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique @db.VarChar(24)
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int

  user User @relation(fields: [userId], references: [id])
}

model Project {
  id             Int      @id @default(autoincrement())
  name           String   @db.VarChar(64)
  isPrivate      Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  creatingUserId Int      @map("userId")

  creatingUser User              @relation(fields: [creatingUserId], references: [id])
  userRoles    UserProjectRole[]

  @@unique([name, creatingUserId], name: "Project_Name_CreatingUserId")
}

enum UserProjectRoleType {
  COLLABORATOR
  VIEWER
}

model UserProjectRole {
  projectId Int
  userId    Int
  roleType  UserProjectRoleType
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt

  project Project @relation(fields: [projectId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@id([projectId, userId])
}
